<?xml version="1.0"?>
<doc>
    <assembly>
        <name>registerfunktionalitet</name>
    </assembly>
    <members>
        <member name="T:Kartotek.Controllers.HomeController">
            <summary>
            grundklass från mallen för en MVC:applikation
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.HomeController.#ctor(Microsoft.Extensions.Logging.ILogger{Kartotek.Controllers.HomeController})">
            <summary>
             kreator för HomeController
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.HomeController.Index">
            <summary>
             Hämta ut index.html
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.HomeController.Privacy">
            <summary>
            Uppgifter om personuppgiftskyddet
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.HomeController.Error">
            <summary>
            Något är fel, en felvy
            </summary>
        </member>
        <member name="T:Kartotek.Controllers.PeopleAjaxController">
             <summary>
             ett personkartotek
            
             kontrollant för ett MVC-program som förutom vyer, använder AJAX:teknik inklusive att
             sidan/sidorna delvis byggs upp helt via JavaScript/jQuery
            
             Data transporteras som JSON/XML mellan programmet i webläsaren
             och bakliggande system/program
            
             En AJAX:anpassad kontrollklass <c>PeopleAjaxController</c> för medlemskartoteket.
             </summary>
             <remark>
             kontroller-klassen knyter ihop affärs-/process-logik (serviceenhten) med UI.
             En kontroller implementeras utgående från serviceenhetens termer
             </remark>
        </member>
        <member name="M:Kartotek.Controllers.PeopleAjaxController.#ctor(Microsoft.Extensions.Logging.ILogger{Kartotek.Controllers.PeopleAjaxController},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Kartotek.Modeller.Interfaces.IPeopleService)">
            <summary>
            kreator för PeopleAjaxController
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.PeopleAjaxController.uppdateralistanurdatabasen">
            <summary>
            komplett kartotek, utan någon filtrering
            API mot JS !!
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.PeopleAjaxController.uppdateralistanvissakort">
            <summary>
            ett utdrag av vissa kort från kartoteket
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.PeopleAjaxController.tagframkortet(System.Int32)">
            <summary>
            tag fram ett specifikt kort
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.PeopleAjaxController.kaserakortet(System.Int32)">
             <summary>
             kassera ett specifikt kort
             DELETE som metod !
            
             Id kan inte vara med i body, den måste skickas av jQuery som del av URI:n, så bort med Id i HttpDelete:attributet
             </summary>
             <see href="https://stackoverflow.com/questions/15088955/how-to-pass-data-in-the-ajax-delete-request-other-than-headers">JQuery bug</see>
             <see href="http://bugs.jquery.com/ticket/11586">bug i jQuery (?): använder man DELETE så klipps data-klumpen bort</see>
        </member>
        <member name="T:Kartotek.Controllers.PeopleController">
             <summary>
             ett personkartotek
            
             kontrollant för ett MVC-baserat program.
            
             Den kontrollklass som enbart är skriven enligt MVC:konceptet och
             där sidan/sidorna i huvudsak formas som partial view - komponentbaserade vyer ?
             </summary>
             <remark>
             kontroller-klassen knyter ihop affärs-/process-logik (serviceenhten) med UI.
             En kontroller implementeras utgående från serviceenhetens termer
             </remark>
        </member>
        <member name="M:Kartotek.Controllers.PeopleController.#ctor(Microsoft.Extensions.Logging.ILogger{Kartotek.Controllers.PeopleController},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Kartotek.Modeller.Interfaces.IPeopleService)">
            <summary>
            kreator för PeopleController
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.PeopleController.Index(Kartotek.Modeller.Vyer.HopslagenmodellVymodell)">
            <summary>
            bilden med:
              sökformulär
              formulär för att addera en person i registret
              enbart en platsmarkör för (i AJAX:versionen)
                  en sökväljare
                  detaljer för ett visst kort
                  listan av personer (vymodell.utdraget)
              Index körs direkt vid första visning- alltså kommer
              valdterm.{this.sessionsuffix}
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.PeopleController.Filtrera(Kartotek.Modeller.Vyer.HopslagenmodellVymodell)">
            <summary>
            modifiera aktiv sökterm
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.PeopleController.IngenFiltrering(Kartotek.Modeller.Vyer.HopslagenmodellVymodell)">
            <summary>
            återställ sökning, måste ange mot serviceenheten förändringen
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.PeopleController.SkapaNyttKort(Kartotek.Modeller.Vyer.HopslagenmodellVymodell)">
            <summary>
            skicka en CreatePersonViewModel till serviceenheten
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.PeopleController.ModifieraKort(Kartotek.Modeller.Vyer.HopslagenmodellVymodell)">
            <summary>
            modifiering av ett specifikt kort
            använder modifieringsfunktionen i kortlistan
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.PeopleController.TagBortKort(System.Int32)">
            <summary>
            kasering
            använder kaseringsfunktionen i kortlistan
            </summary>
        </member>
        <member name="T:Kartotek.Controllers.EnvironmentController">
             <summary>
             anrop (GET) med curl eller postman till https://l....:5009/routes
            
             varför saknas exv:
               People/Index
             Ingen av aktörerna i People syns i listan
             </summary>
        </member>
        <member name="M:Kartotek.Controllers.EnvironmentController.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider)">
            <summary>
            to be done
            </summary>
        </member>
        <member name="M:Kartotek.Controllers.EnvironmentController.GetAllRoutes">
            <summary>
            https://l....:5009/routes
            </summary>
        </member>
        <member name="T:Kartotek.Controllers.RouteModel">
            <summary>
            to be done
            </summary>
        </member>
        <member name="T:Kartotek.Controllers.ListResult`1">
            <summary>
            to be done
            </summary>
        </member>
        <member name="T:Kartotek.Databas.DBPeople">
            <summary>
            to be done
            </summary>
        </member>
        <member name="P:Kartotek.Databas.DBPeople.Environment">
            <summary>
            </summary>
        </member>
        <member name="P:Kartotek.Databas.DBPeople.Configurationsrc">
            <summary>
            https://docs.microsoft.com/en-us/aspnet/core/fundamentals/startup?view=aspnetcore-3.1
            </summary>
        </member>
        <member name="P:Kartotek.Databas.DBPeople.Loggdest">
            <summary>
            loggning från DBPeople
            </summary>
        </member>
        <member name="P:Kartotek.Databas.DBPeople.Person">
            <summary>
            databasens relation som objekt-relations mappning
            </summary>
        </member>
        <member name="M:Kartotek.Databas.DBPeople.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Kartotek.Databas.DBPeople},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Logging.ILogger{Kartotek.Databas.DBPeople},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Kreator
            </summary>
            <param name="options"></param>
            <param name="env"></param>
            <param name="loggdest"></param>
            <param name="configurationsrc"></param>
        </member>
        <member name="M:Kartotek.Databas.DBPeople.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            Använder PostgreSQL istället för MS SQL som database
            Istället för att via appsettings*.json sätta anslutningssträngarna kan man göra så här istället
            </summary>
        </member>
        <member name="M:Kartotek.Databas.DBPeople.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            </summary>
        </member>
        <member name="T:Kartotek.Modeller.PeopleService">
            <summary>
            to be done
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.PeopleService.#ctor(Microsoft.Extensions.Logging.ILogger{Kartotek.Modeller.PeopleService},Kartotek.Modeller.Interfaces.IPeopleRepo)">
            <summary>
            kreator av PeopleService
            Ympas med DI med ett kartotek
            injektion för att få tillgång till gemensam InMemoryPeopleRepo
            </summary>
            <param name="loggdest">Ympning med loggfunktionen</param>
            <param name="kartoteket">Ympning av IPeopleRepo</param>
        </member>
        <member name="M:Kartotek.Modeller.PeopleService.FindBy(System.Int32)">
            <summary>
            plocka fram ett visst kort
            enbart i form av entiteter, ej vymodell
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.PeopleService.Edit(System.Int32,Kartotek.Modeller.Entiteter.Person)">
            <summary>
            modifiering av ett specifikt kort
            enbart i form av entiteter, ej vymodell
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.PeopleService.Remove(System.Int32)">
            <summary>
            kasering av ett specifikt kort
            enbart i form av entiteter, ej vymodell
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.PeopleService.Add(Kartotek.Modeller.Vyer.CreatePersonViewModel)">
            <summary>
            tillägg av ett kort
            utgår från en vymodell
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.PeopleService.All">
            <summary>
            sökning efter poster - utgår från en vymodell som sökterm
            kriterier : inga, dvs alla kort ska hämtas och levereras
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.PeopleService.FindBy(Kartotek.Modeller.Vyer.PeopleViewModel)">
            <summary>
            sökning efter poster - utgår från en vymodell som sökterm
            kriterier :
               namn
             eller
               bostadsort
             eller
               båda ?
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.DatabasePeopleRepo.Kartoteket">
            <summary>
            referens till EF:s databaskontext
            </summary>
        </member>
        <member name="F:Kartotek.Modeller.DatabasePeopleRepo.Loggdest">
            <summary>
            loggdestination
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.DatabasePeopleRepo.#ctor(Microsoft.Extensions.Logging.ILogger{Kartotek.Modeller.DatabasePeopleRepo},Kartotek.Databas.DBPeople)">
            <summary>
            Kreator - använd ympning (DI) för att få med ett databaslager
            databaslagret är registrerat i Startup.cs: ConfigureServices
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.DatabasePeopleRepo.Create(System.String,System.String,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.DatabasePeopleRepo.Read">
            <summary>
            returnerar en lista (iterator) för läsning från databasen
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.DatabasePeopleRepo.Read(System.Int32)">
            <summary>
            inläsning av ett visst kort
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.DatabasePeopleRepo.Update(Kartotek.Modeller.Entiteter.Person)">
            <summary>
            modfiering av ett visst kort
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.DatabasePeopleRepo.Delete(Kartotek.Modeller.Entiteter.Person)">
            <summary>
            kasering av uppgifter
            </summary>
        </member>
        <member name="T:Kartotek.Modeller.Data.InMemoryPeopleRepo">
            <summary>
            datalager - en abstraktion som lämnar garantier för data:uppgifters oföränderlighet (persistence)
            användande lager ska ha möjlighet att ställa olika frågor mot modulen.
            specifikt i det här fallet :
              vilka personer heter så-och-så ? Ge mig dem!
              vilka personer bor här-eller-där ? Ge mig dem!
            uppgifterna lämnas som en referense till en behållare. Behållaren garanteras kunna bli komplett
            dvs modulen kommer att sätta upp den så uppgifterna kan hämtas ut av användande modulen
            gradvis.
            </summary>
        </member>
        <member name="F:Kartotek.Modeller.Data.InMemoryPeopleRepo.kartoteket">
            <summary>
            testdata för övriga delar. I EF:versionen ersätts den här med en SQL:databas
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.Data.InMemoryPeopleRepo.#ctor(Microsoft.Extensions.Logging.ILogger{Kartotek.Modeller.Interfaces.IPeopleRepo})">
            <summary>
            Kreator - fyller i seed-data
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.Data.InMemoryPeopleRepo.Create(System.String,System.String,System.String)">
            <summary>
            Lägg upp ett nytt personkort
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.Data.InMemoryPeopleRepo.Read">
            <summary>
            to be done
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.Data.InMemoryPeopleRepo.Read(System.Int32)">
            <summary>
            to be done
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.Data.InMemoryPeopleRepo.Update(Kartotek.Modeller.Entiteter.Person)">
            <summary>
            to be done
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.Data.InMemoryPeopleRepo.Delete(Kartotek.Modeller.Entiteter.Person)">
            <summary>
            to be done
            </summary>
        </member>
        <member name="T:Kartotek.Modeller.Entiteter.Person">
            <summary>
            to be done
            </summary>
        </member>
        <member name="M:Kartotek.Modeller.Entiteter.Person.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            to be done
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Entiteter.Person.Id">
            <summary>
            to be done
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Entiteter.Person.Namn">
            <summary>
            to be done
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Entiteter.Person.Bostadsort">
            <summary>
            to be done
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Entiteter.Person.Telefonnummer">
            <summary>
            to be done
            </summary>
        </member>
        <member name="T:Kartotek.Modeller.ErrorViewModel">
            <summary>
            to be done
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.ErrorViewModel.RequestId">
            <summary>
            to be done
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.ErrorViewModel.ShowRequestId">
            <summary>
            to be done
            </summary>
        </member>
        <member name="T:Kartotek.Modeller.Vyer.AktionSpecifiktkort">
            <summary>
            to be done
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Vyer.AktionSpecifiktkort.KortetsId">
            <summary>
            to be done
            </summary>
        </member>
        <member name="T:Kartotek.Modeller.Vyer.CreatePersonViewModel">
            <summary>
            to be done
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Vyer.CreatePersonViewModel.Namn">
            <summary>
            Namnet på den person som det nya kortet upptar
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Vyer.CreatePersonViewModel.Bostadsort">
            <summary>
            Personens bostadsort
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Vyer.CreatePersonViewModel.Telefonnummer">
            <summary>
            Personens telefonnummer - kontaktuppgifter
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Vyer.Filtreringstermer.Namn">
             <summary>
             sökkriterier i sidhuvudet (används av PeopleController)
             private string namn;
            
             används av Shared/Filtrering/Filtreringstermer.cshtml
             </summary>
        </member>
        <member name="P:Kartotek.Modeller.Vyer.Filtreringstermer.Bostadsort">
            <summary>
            sökkriterier i sidhuvudet (används av PeopleController)
            string bostadsort;
            </summary>
        </member>
        <member name="T:Kartotek.Modeller.Vyer.HopslagenmodellVymodell">
             <summary>
             används i PeopleController:s egen index.html som datakälla - blir model
            
             Hopslagning av de klasser som är del av definitionerna i IPeopleService
             iom att razor-filerna enbart vill hantera en modell, alltså måste klasserna
             slås ihop till en gemensam modell i kontroller
            
             garantera att:
               att användarna inte försöker skapa flera kort med samma innehåll
               kontroll av uppgifterna
                  att följande är satta dvs ej NULL
                    namn
                    bostadsort
                    telefonnummer
            
             slås isär i kontroller innan delarna lämnas över till Peopleservice
             </summary>
        </member>
        <member name="P:Kartotek.Modeller.Vyer.HopslagenmodellVymodell.Listfiltrering">
            <summary>
            söktermer i filtreringsdialogen
            kan innehålla namn eller bostadsort
            </summary>
            <see cref="T:Kartotek.Modeller.PeopleService">PeopleService</see>
        </member>
        <member name="F:Kartotek.Modeller.Vyer.HopslagenmodellVymodell.InskrivningNyttKort">
            <summary>
            Fyll i ett nytt kort - nytt-kort delen i fönstret
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Vyer.HopslagenmodellVymodell.Personlistan">
            <summary>
            de personer som ska synas i den vybaserade sidans lista
            </summary>
        </member>
        <member name="T:Kartotek.Modeller.Vyer.PeopleViewModel">
            <summary>
            to be done
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Vyer.PeopleViewModel.Namn">
             <summary>
             sökkriterier i sidhuvudet (används av PeopleController)
             private string namn;
            
             används av Shared/Filtrering/Filtreringstermer.cshtml
             </summary>
        </member>
        <member name="P:Kartotek.Modeller.Vyer.PeopleViewModel.Bostadsort">
            <summary>
            sökkriterier i sidhuvudet (används av PeopleController)
            string bostadsort;
            </summary>
        </member>
        <member name="P:Kartotek.Modeller.Vyer.PeopleViewModel.Utdraget">
            <summary>
            innehåller listan på de kort som ska synas i vyn (från PeopleController)
            används inte i den AJAX-baserade versionen iom den är ersatt av en partial view
            som utgår från en lista av personer, för varje person skapas en specfik partial view
            </summary>
        </member>
        <member name="T:Kartotek.Modeller.Interfaces.IPeopleRepo">
             <summary>
             ett åtagande för ett det gränssnitt som affärslogikfunktioner har mot
             datalagernivån
            
             Moduler som implementerar IPeopleService ska kunna använda varje modul som
             följer IPeopleRepo-åtagandet
             </summary>
             <remarks>
            
             Definitioner av åtagandena finns i http://skaraborgfakir.github.io/lexicon/3. MVC
             </remarks>
             <see href="https://skaraborgfakir.github.io/lexicon/3.%20MVC/MVC%20Data,%20Assignment%203%20-%View Models.pdf">
             Designen måste följa dokumenten MVC Data, View Models</see>
             <see href="https://skaraborgfakir.github.io/lexicon/3.%20MVC/MVC%20Data,%20Assignment%203%20-%20Partial Views.pdf">
             och MVC Data, Partial Views</see>
             <see href="https://skaraborgfakir.github.io/lexicon/3.%20MVC/MVC%20Data,%20Assignment%203%20-%20AJAX.pdf">
             och MVC Data, AJAX</see>
        </member>
        <member name="M:Kartotek.Modeller.Interfaces.IPeopleRepo.Create(System.String,System.String,System.String)">
            <summary>
            inläggning av ett nytt kort
            INTE id som en parameter
            </summary>
            <param name="namn">Medlemmens namn,</param>
            <param name="bostadsort">hemort</param>
            <param name="telefonnummer">telefonnummer hem</param>
            <returns>Kopia på det nu tillagda kortobjektet</returns>
        </member>
        <member name="M:Kartotek.Modeller.Interfaces.IPeopleRepo.Read">
            <summary>
            ett totalutdrag från registret
            </summary>
            <returns>En samling med samtliga inlagda kort</returns>
        </member>
        <member name="M:Kartotek.Modeller.Interfaces.IPeopleRepo.Read(System.Int32)">
            <summary>
            utdrag av ett specifikt kort
            </summary>
            <param name="id">id - löpnummer för det kort som ska hämtas</param>
            <returns>Kopia på ett visst kort</returns>
        </member>
        <member name="M:Kartotek.Modeller.Interfaces.IPeopleRepo.Update(Kartotek.Modeller.Entiteter.Person)">
            <summary>
            modifiering
            </summary>
            <param name="person">det kort som ska modifieras</param>
            <returns>Modifiering av ett visst kort</returns>
        </member>
        <member name="M:Kartotek.Modeller.Interfaces.IPeopleRepo.Delete(Kartotek.Modeller.Entiteter.Person)">
            <summary>
            kasering av ett kort
            </summary>
            <param name="person">Person person - det kort som ska kaseras</param>
            <returns>Flagga som anger om kasering fungerade, fanns kortet överhuvudtaget ?</returns>
        </member>
        <member name="T:Kartotek.Modeller.Interfaces.IPeopleService">
             <summary>
             En design och ett åtagande för affärslogikmoduler mot kontrollanterna i ett
             medlemskartotek
             </summary>
             <remarks>
             Används som ett kontrakt mellan olika utvecklare hur de kommer att konstruera
             något
            
             Moduler som implementerar IPeopleService ska ansvara för
             affärs-logik/-funktioner
            
             En MVC-kontrollant ska exv inte användas för att söka eller få fram exv
             ordersummor
             Sådant ska vara i exv OrderService (som ansvarar för åtagandet IOrderService)
            
             Definitioner av åtagandena finns i http://skaraborgfakir.github.io/lexicon/3. MVC
             </remarks>
             <seealso href="https://skaraborgfakir.github.io/lexicon/3.%20MVC/MVC%20Data,%20Assignment%203%20-%View Models.pdf">
             Designen måste följa dokumenten MVC Data, View Models</seealso>
             <seealso href="https://skaraborgfakir.github.io/lexicon/3.%20MVC/MVC%20Data,%20Assignment%203%20-%20Partial Views.pdf">
             och MVC Data, Partial Views</seealso>
             <seealso href="https://skaraborgfakir.github.io/lexicon/3.%20MVC/MVC%20Data,%20Assignment%203%20-%20AJAX.pdf">
             och MVC Data, AJAX</seealso>
        </member>
        <member name="M:Kartotek.Modeller.Interfaces.IPeopleService.Add(Kartotek.Modeller.Vyer.CreatePersonViewModel)">
            <summary>
            inläggning av ett kort, använder den Create som definieras av IPeopleRepo
            </summary>
            <param name="person">uppgifter till det nya kortet</param>
            <returns>Inläggning av ett nytt kort med uppgifter om en medlem</returns>
            <see cref="T:Kartotek.Modeller.Interfaces.IPeopleRepo">Create i IPeopleRepo</see>
            <see cref="T:Kartotek.Modeller.Vyer.CreatePersonViewModel">Vymodellen CreatePersonViewModel</see>
        </member>
        <member name="M:Kartotek.Modeller.Interfaces.IPeopleService.All">
            <summary>
            totalutdrag från registret, som vymodell
            </summary>
            <returns>En lista med alla kort i kartoteket</returns>
            <see cref="T:Kartotek.Modeller.Interfaces.IPeopleRepo">Read i IPeopleRepo</see>
        </member>
        <member name="M:Kartotek.Modeller.Interfaces.IPeopleService.FindBy(Kartotek.Modeller.Vyer.PeopleViewModel)">
            <summary>
            specifik(a) kort, som vymodell. PeopleViewModel har sökvillkoren
            </summary>
            <param name="search">PeopleViewModel där sökvillkoret anges</param>
            <returns>PeopleViewModel där funna kort finns i Utdraget</returns>
            <see cref="T:Kartotek.Modeller.Interfaces.IPeopleRepo">Read i IPeopleRepo</see>
        </member>
        <member name="M:Kartotek.Modeller.Interfaces.IPeopleService.FindBy(System.Int32)">
            <summary>
            ett specifikt kort
            </summary>
            <param name="id">Nummer för det kort som efterfrågas</param>
            <returns>Hittat kort</returns>
            <see cref="T:Kartotek.Modeller.Interfaces.IPeopleRepo">Read i IPeopleRepo</see>
        </member>
        <member name="M:Kartotek.Modeller.Interfaces.IPeopleService.Edit(System.Int32,Kartotek.Modeller.Entiteter.Person)">
            <summary>
            modifiering av ett kort med ett visst nummer
            </summary>
            <param name="id">Kortnummer för det kort som ska modifieras</param>
            <param name="person">Hur alla uppgifterna ska se ut</param>
            <returns>Kopia på det modifierade kortet</returns>
            <see cref="T:Kartotek.Modeller.Interfaces.IPeopleRepo">Update i IPeopleRepo</see>
        </member>
        <member name="M:Kartotek.Modeller.Interfaces.IPeopleService.Remove(System.Int32)">
            <summary>
            borttagning av ett visst kort
            </summary>
            <param name="id">id</param>
            <returns>flagga som anger om borttangninen fungerade (fanns kortet egentligen ?)</returns>
            <see cref="T:Kartotek.Modeller.Interfaces.IPeopleRepo">Delete i IPeopleRepo</see>
        </member>
        <member name="T:Kartotek.Program">
             <summary>
             Huvud-rutin/-klass i ett medlemskartotek
            
             Programmet körs som en webserver
             </summary>
        </member>
        <member name="M:Kartotek.Program.Main(System.String[])">
             <summary>
             Huvud-rutin/-klass i ett medlemskartotek
            
             Inte något annat än ett omslag runt CreateHostBuilder och därefter build och run
            
             EF6:verktygen är beroende av att det finns en metod i klassen Program med namneet CreateHostBuilder
             </summary>
             <param name="args">argumentvektor ekvivalent med argc/argv i C</param>
             <see href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/generic-host?view=aspnetcore-3.1">.Net Generic Host</see>
             <see href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/web-host?view=aspnetcore-3.1">.Net Web Host</see>
             <see href="https://stackoverflow.com/questions/41287648/how-do-i-write-logs-from-within-startup-cs">how-do-i-write-logs-from-within-startup-cs</see>
        </member>
        <member name="M:Kartotek.Program.CreateHostBuilder(System.String[])">
             <summary>
             startrutin för .Net core
            
             inkluderar logging mot konsoll och får webBuilder att aktivera klassen REVELJ
            
             Den här metoden är speciell iom att EF6 (och Identity Server) förväntar sig att just den här
             metoden finns med just det här namnet
             </summary>
             <param name="args">
             argumentvektor ekvivalent med argc/argv i C. CreateHostBuilder exv
             kan plocka bort de argument i listan som är i dess fögderi
             </param>
             <see href="https://stackoverflow.com/questions/41287648/how-do-i-write-logs-from-within-startup-cs">how-do-i-write-logs-from-within-startup-cs</see>
        </member>
        <member name="T:Kartotek.REVELJ">
            <summary>
            används av webbuilder som definition av appen
            </summary>
            <remarks>
            kan egentligen heta vad som helst exv REVELJ !
            </remarks>
        </member>
        <member name="P:Kartotek.REVELJ.Environment">
            <summary>
            </summary>
        </member>
        <member name="P:Kartotek.REVELJ.Configurationsrc">
            <summary>
            https://docs.microsoft.com/en-us/aspnet/core/fundamentals/startup?view=aspnetcore-3.1
            </summary>
        </member>
        <member name="M:Kartotek.REVELJ.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            https://docs.microsoft.com/en-us/aspnet/core/fundamentals/startup?view=aspnetcore-3.1
            </summary>
            <param name="configurationsrc">DI av en instans av IConfiguration</param>
            <param name="env">DI av en instans av IHostEnvironment</param>
        </member>
        <member name="M:Kartotek.REVELJ.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
             <summary>
             https://docs.microsoft.com/en-us/aspnet/core/fundamentals/startup?view=aspnetcore-3.1
            
             DI:ympning av loggning fungerar inte i ConfigureServices
             </summary>
             <param name="services">DI av en instans av IServiceCollection - ger tillgång till exv info om programmets miljö</param>
             <see href="https://stackoverflow.com/questions/41287648/how-do-i-write-logs-from-within-startup-cs">how-do-i-write-logs-from-within-startup-cs</see>
        </member>
        <member name="M:Kartotek.REVELJ.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Logging.ILogger{Kartotek.REVELJ})">
             <summary>
             Konfiguration av hur http-trafik ska hanteras
             överföring mellan de olika stegen via Routing, Session, Autentisering till mottagande kontrollant
            
             klistra in olika funktioner i ramverkets avveckling av jobb (inkommande trafik via http och returnerade svar)
            
             DI av loggning från rot
             </summary>
        </member>
    </members>
</doc>
