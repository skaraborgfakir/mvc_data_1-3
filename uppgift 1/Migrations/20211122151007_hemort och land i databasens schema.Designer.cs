// <auto-generated />
using System;
using Kartotek.Databas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Kartotek.Migrations
{
    [DbContext(typeof(DBPeople))]
    [Migration("20211122151007_hemort och land i databasens schema")]
    partial class hemortochlandidatabasensschema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("medlemskartotek")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Kartotek.Modeller.Entiteter.Hemort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("LandId")
                        .HasColumnType("integer");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("LandId");

                    b.ToTable("Orter");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Land = "Sverige",
                            Namn = "Solberga"
                        },
                        new
                        {
                            Id = 2,
                            Land = "Sverige",
                            Namn = "Göteborg"
                        });
                });

            modelBuilder.Entity("Kartotek.Modeller.Entiteter.Land", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("Land");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Namn = "Finland"
                        },
                        new
                        {
                            Id = 2,
                            Namn = "Sverige"
                        },
                        new
                        {
                            Id = 3,
                            Namn = "Danmark"
                        });
                });

            modelBuilder.Entity("Kartotek.Modeller.Entiteter.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Bostadsort")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Telefonnummer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bostadsort = "Solberga",
                            Namn = "Michael Carlsson",
                            Telefonnummer = "0433"
                        },
                        new
                        {
                            Id = 2,
                            Bostadsort = "Göteborg",
                            Namn = "Ulf Smedbo",
                            Telefonnummer = "031"
                        });
                });

            modelBuilder.Entity("Kartotek.Modeller.Entiteter.Hemort", b =>
                {
                    b.HasOne("Kartotek.Modeller.Entiteter.Land", null)
                        .WithMany("städerilandet")
                        .HasForeignKey("LandId");
                });
#pragma warning restore 612, 618
        }
    }
}
